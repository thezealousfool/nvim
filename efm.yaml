version: 2
log-file: /Users/vivekroy/.local/state/efm.log
log-level: 5
root-markers:
  - .git/
  - pyproject.toml
  - setup.py
  - requirements.txt
  - requirements.pip
  - Cargo.toml
  - Cargo.lock
  - package.json
  - yarn.lock
  - node_modules
lint-debounce: 1s
format-debounce: 0.1s

tools:
  c-clang-format: &c-clang-format
    format-command: 'clang-format ${INPUT} ${--offset=charStart} ${--length=charEnd-charStart}'
    format-stdin: true

  c-cpp-check: &c-cpp-check
    lint-command: 'cppcheck -q --enable=warning,style,performance,portability,information,missingInclude --error-exitcode=1 --check-level=exhaustive ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l:%c:%t:%m'
    lint-offset-columns: 1

  swift-format: &swift-format
    format-command: 'swift-format format -i --assume-filename ${INPUT}'
    format-stdin: true

  python-ruff: &python-ruff
    lint-command: 'ruff check --stdin-filename ${INPUT} --output-format concise --quiet -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c:%t:%m'
    format-command: 'ruff format --stdin-filename ${INPUT} --quiet -'
    format-stdin: true

  python-ruff-sort: &python-ruff-sort
    format-command: 'ruff check --select I --fix --stdin-filename ${INPUT} --quiet -'
    format-stdin: true

  toml-taplo: &toml-taplo
    format-command: 'taplo format --stdin-filepath ${INPUT} -'
    format-stdin: true
    lint-command: 'taplo check ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true

  toml-taplo: &toml-taplo
    format-command: "taplo fmt --stdin-filename ${INPUT} -"
    format-stdin: true

  rust-rustfmt: &rust-rustfmt
    format-command: 'rustfmt -q --emit=stdout'
    format-stdin: true

  sh-shfmt: &sh-shfmt
    format-command: 'shfmt -i 2 -ci -'
    format-stdin: true

  lua-stylua: &lua-stylua
    format-command: 'stylua --color Never ${--range-start=charStart} ${--range-end=charEnd} ${--stdin-filepath=INPUT} -'
    format-stdin: true

  html-prettier: &html-prettier
    format-command: 'prettier --parser html'
    format-stdin: true

  css-prettier: &css-prettier
    format-command: 'prettier --parser css'
    format-stdin: true

  javascript-eslint: &javascript-eslint
    lint-command: 'eslint -f visualstudio --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%f(%l,%c): %tarning %m"
      - "%f(%l,%c): %rror %m"

  javascript-prettier: &javascript-prettier
    format-command: 'prettier --parser javascript'
    format-stdin: true
    root-markers:
      - .prettierrc
      - .prettierrc.json
      - .prettierrc.js
      - .prettierrc.yml
      - .prettierrc.yaml
      - .prettierrc.json5
      - .prettierrc.mjs
      - .prettierrc.cjs
      - .prettierrc.toml

  typescript-prettier: &typescript-prettier
    format-command: 'prettier --parser typescript'
    format-stdin: true
    root-markers:
      - .prettierrc
      - .prettierrc.json
      - .prettierrc.js
      - .prettierrc.yml
      - .prettierrc.yaml
      - .prettierrc.json5
      - .prettierrc.mjs
      - .prettierrc.cjs
      - .prettierrc.toml

  json-jq: &json-jq
    lint-command: 'jq .'
    format-stdin: true

  json-prettier: &json-prettier
    format-command: 'prettier --parser json'
    format-stdin: true

languages:
  python:
    - <<: *python-ruff
    - <<: *python-ruff-sort
  toml:
    - <<: *toml-taplo
  c:
    - <<: *c-clang-format
    - <<: *c-cpp-check
  rust:
    - <<: *rust-rustfmt
  sh:
    - <<: *sh-shfmt
  lua:
    - <<: *lua-stylua
  html:
    - <<: *html-prettier
  css:
    - <<: *css-prettier
  javascript:
    - <<: *javascript-eslint
    - <<: *javascript-prettier
  typescriptreact:
    - <<: *javascript-eslint
    - <<: *typescript-prettier
  typescript:
    - <<: *javascript-eslint
    - <<: *typescript-prettier
  json:
    - <<: *json-jq
    - <<: *json-prettier
  jsonc:
    - <<: *json-jq
    - <<: *json-prettier
